import math

# Define a base class called Shape
class Shape:
    # Define a method to calculate the area of the shape
    def calculate_area(self):
        # Raise a NotImplementedError to indicate that this method should be overridden by subclasses
        raise NotImplementedError("This method should be implemented by subclasses.")

# Define a subclass called Circle that inherits from the Shape class
class Circle(Shape):
    # Initialize the attributes of the circle
    def __init__(self, radius):
        self.radius = radius

    # Override the calculate_area method for the circle
    def calculate_area(self):
        # Use the formula for the area of a circle: pi * r^2
        return math.pi * self.radius ** 2

# Define a subclass called Rectangle that inherits from the Shape class
class Rectangle(Shape):
    def __init__(self, length, width):
        self.length = length
        self.width = width
    def calculate_area(self):
        return self.length * self.width
class Triangle(Shape):
    def __init__(self, base, height):
        self.base = base
        self.height = height
    def calculate_area(self):
        return 0.5 * self.base * self.height
my_circle = Circle(5)
my_rectangle = Rectangle(10, 20)
my_triangle = Triangle(15, 25)
print(f"The area of the circle is {my_circle.calculate_area()}.")
print(f"The area of the rectangle is {my_rectangle.calculate_area()}.")
print(f"The area of the triangle is {my_triangle.calculate_area()}.")


